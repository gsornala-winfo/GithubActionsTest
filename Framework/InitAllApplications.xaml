<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Orchestrator_Queue_Name" Type="InArgument(x:String)" />
    <x:Property Name="Db_Connection" Type="OutArgument(ui:DatabaseConnection)" />
    <x:Property Name="Trigger_Point" Type="InArgument(x:String)" />
    <x:Property Name="Process_Name" Type="InArgument(x:String)" />
    <x:Property Name="Application_Name" Type="InArgument(x:String)" />
    <x:Property Name="RPA_ID" Type="InArgument(x:String)" />
    <x:Property Name="Retry" Type="InArgument(x:String)" />
    <x:Property Name="value_config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Status_Key" Type="InOutArgument(x:String)" />
    <x:Property Name="error_message_key" Type="InOutArgument(x:String)" />
    <x:Property Name="overall_status_key" Type="InOutArgument(x:String)" />
  </x:Members>
  <this:Initialize_Applications.Orchestrator_Queue_Name>
    <InArgument x:TypeArguments="x:String" />
  </this:Initialize_Applications.Orchestrator_Queue_Name>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1245,3995</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Open and initialize application as needed.&#xA;&#xA;Pre Condition: N/A&#xA;Post Condtion: Applications opened" DisplayName="Initialization Sequence" sap:VirtualizedContainerService.HintSize="1255,3810" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log App Initialization message" sap:VirtualizedContainerService.HintSize="1193,101" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Opening applications...&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="Establishes Database Connection" DisplayName="DBConnection" sap:VirtualizedContainerService.HintSize="1193,1060" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Connect-DB workflow" sap:VirtualizedContainerService.HintSize="502,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Actions\Generic\Connect-DB.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
          <OutArgument x:TypeArguments="ui:DatabaseConnection" x:Key="Db_Connection">[Db_Connection]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="502,61" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DeleteQueue workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="DeleteQueue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="orchestrator">[Orchestrator_Queue_Name]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[Config]</InArgument>
                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="DB_Connection">[Db_Connection]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Trigger_Point.ToString.ToLower]" sap:VirtualizedContainerService.HintSize="502,644" sap2010:WorkflowViewState.IdRef="Switch`1_1">
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="mail" sap2010:Annotation.AnnotationText="Read Unread Mails in Folder and saves the attachments.&#xA;Adds Attachment names to the Queue.&#xA;" DisplayName="Invoke IMAP workflow" sap:VirtualizedContainerService.HintSize="334,194" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="IMAP.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="Db_Connection">[Db_Connection]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Orchestrator_Queue_Name">[Orchestrator_Queue_Name]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Sheet_Name" />
            <InArgument x:TypeArguments="x:String" x:Key="Application_Name">[Application_Name]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Process_Name">[Process_Name]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Retry">[Retry]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="RPA_ID">[RPA_ID]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <Sequence x:Key="dashboard" sap:VirtualizedContainerService.HintSize="462,366" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Sequence2 workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Sequence2.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Application_Name">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Application_Name" />
                </InArgument>
                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="DB_Connection">
                  <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="Db_Connection" />
                </InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">
                  <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Retry">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Retry" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Process_Name">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Process_Name" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="value_config">
                  <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="value_config" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="Status_Key">
                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Status_Key" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="overall_status_key">
                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="overall_status_key" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="error_message_key">
                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="error_message_key" />
                </InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </Sequence>
        <Sequence x:Key="sharepoint" sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SharepointInit workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SharepointInit.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="DB_Connection">[Db_Connection]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Process_Name">[Process_Name]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Orchestrator_Queue_Name">[Orchestrator_Queue_Name]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Application_Name">[Application_Name]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="RPA_ID">[RPA_ID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Retry">[Retry]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </Switch>
    </Sequence>
    <Sequence sap:VirtualizedContainerService.HintSize="1193,2375" sap2010:WorkflowViewState.IdRef="Sequence_25">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItem" />
        <Variable x:TypeArguments="x:Int32" Name="queueCount" />
        <Variable x:TypeArguments="x:String" Name="sql_query" />
        <Variable x:TypeArguments="sd:DataTable" Name="db_data" />
        <Variable x:TypeArguments="x:String" Name="no_of_robots" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="1131,89" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="New" QueueName="[Orchestrator_Queue_Name]" Reference="[Process_Name]" Result="[queueItem]" />
      <Assign sap:VirtualizedContainerService.HintSize="1131,70" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[sql_query]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["select MAX_ROBOTS from PROCESS_ADMINISTRATION where WB_PROCESS_NAME='"+Process_Name+"'"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1131,101" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Geting the robot count&quot;+sql_query.ToString]" />
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[db_data]" DisplayName="Execute Query" ExistingDbConnection="[Db_Connection]" sap:VirtualizedContainerService.HintSize="1131,98" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[sql_query]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1131,312" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Assign sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[no_of_robots]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[db_data.rows(0)(0).ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Assign sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[no_of_robots]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">1</InArgument>
                </Assign.Value>
              </Assign>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1131,103" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;get queue count--&gt;&quot;+queueItem.Count.ToString]" />
      <Assign sap:VirtualizedContainerService.HintSize="1131,70" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[queueCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[queueItem.Count]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[queueCount.Equals(0)]" sap:VirtualizedContainerService.HintSize="1131,1130" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="986,960" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[(CInt(no_of_robots)-1).Equals(0) Or queueCount.Equals(1)]" sap:VirtualizedContainerService.HintSize="924,838" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Else>
                <If Condition="[queueCount&lt;(CInt(no_of_robots)-1)]" sap:VirtualizedContainerService.HintSize="779,668" sap2010:WorkflowViewState.IdRef="If_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:StartJob ArgumentsVariable="{x:Null}" Key="{x:Null}" NumberOfRobots="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Start Job" FolderPath="[Config(&quot;Orchestrator_Foldername&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="StartJob_5" JobPriority="Normal" ModernFolder="True" ProcessName="[Config(&quot;sub_process_name&quot;).ToString]" ResumeOnSameContext="False">
                      <ui:StartJob.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="Trigger_Point">[Trigger_Point]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Process_Name">[Process_Name]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Application_Name">[Application_Name]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="RPA_ID">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Retry">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:StartJob.Arguments>
                    </ui:StartJob>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,498" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,103" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;no of robot finally executing are--&gt;&quot;+(Cint(no_of_robots)-1).ToString]" />
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,103" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Sub Process Name --&gt;&quot;+Config(&quot;sub_process_name&quot;).ToString]" />
                      <ui:StartJob ArgumentsVariable="{x:Null}" Key="{x:Null}" NumberOfRobots="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Start Job" FolderPath="[Config(&quot;Orchestrator_Foldername&quot;).ToString]" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="StartJob_4" JobPriority="Normal" ModernFolder="True" ProcessName="[Config(&quot;sub_process_name&quot;).ToString]" ResumeOnSameContext="False">
                        <ui:StartJob.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="Trigger_Point">[Trigger_Point]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Process_Name">[Process_Name]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Application_Name">[Application_Name]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="RPA_ID">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Retry">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:StartJob.Arguments>
                      </ui:StartJob>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>